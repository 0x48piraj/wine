DEFS      = -DWINELIB
TOPSRCDIR = @top_srcdir@
TOPOBJDIR = ../..
SRCDIR    = @srcdir@
VPATH     = @srcdir@
MODULE    = none
PROGRAMS  = winhelp hlp2sgml
ALL_LIBS  = $(WINELIB) $(X_LIBS) $(XPM_LIB) $(XLIB) $(LIBS)
RCFLAGS   = -w32 -h

LANGUAGES   = En Da De Fr Fi Ko Hu It Va Sw

MOSTSRCS = \
	winhelp.c \
	hlpfile.c \
	macro.c

# Some strings need addresses >= 0x10000
STRINGSRCS = string.c

EXTRA_SRCS = macro.yacc.y macro.lex.l
EXTRA_OBJS = y.tab.o lex.yy.o

RC_SRCS = $(LANGUAGES:%=%.rc)

C_SRCS = $(MOSTSRCS) $(STRINGSRCS)

MOSTOBJS = $(MOSTSRCS:.c=.o) $(EXTRA_OBJS)
STRINGOBJS = $(STRINGSRCS:.c=.o) $(RC_SRCS:.rc=.o)

all: check_winerc $(PROGRAMS)

depend:: $(RC_SRCS:.rc=.h) y.tab.h

@MAKE_RULES@

# Rules for using old resource compiler
.rc.c:
	echo "#include \"windows.h\"" >$*-tmp.c
	echo WINDOWS_H_ENDS_HERE >>$*-tmp.c
	cat $< >>$*-tmp.c
	$(CPP) $(DEFS) $(OPTIONS) $(DIVINCL) -DRC_INVOKED -P $*-tmp.c | sed -e '1,/^WINDOWS_H_ENDS_HERE/d' | $(WINERC) $(RCFLAGS) -c -o $* -p $*
	$(RM) $*-tmp.c
.rc.h:
	echo "#include \"windows.h\"" >$*-tmp.c
	echo WINDOWS_H_ENDS_HERE >>$*-tmp.c
	cat $< >>$*-tmp.c
	$(CPP) $(DEFS) $(OPTIONS) $(DIVINCL) -DRC_INVOKED -P $*-tmp.c | sed -e '1,/^WINDOWS_H_ENDS_HERE/d' | $(WINERC) $(RCFLAGS) -c -o $* -p $*
	$(RM) $*-tmp.c
clean::
	$(RM) $(RC_SRCS:.rc=.c)

# Some strings need addresses >= 0x10000
winhelp: $(MOSTOBJS) $(STRINGOBJS)
	$(CC) -o winhelp $(MOSTOBJS) $(LDOPTIONS) $(ALL_LIBS) $(STRINGOBJS)

hlp2sgml: hlp2sgml.o hlpfile.o
	$(CC) -o hlp2sgml hlp2sgml.o hlpfile.o

install: dummy
	$(INSTALL_PROGRAM) winhelp $(bindir)/winhelp
	$(INSTALL_PROGRAM) hlp2sgml $(bindir)/hlp2sgml

y.tab.c y.tab.h: macro.yacc.y
	$(YACC) -d -t $(SRCDIR)/macro.yacc.y

lex.yy.c: macro.lex.l
	$(LEX) -8 -i $(SRCDIR)/macro.lex.l

$(RC_SRCS:.rc=.c) $(RC_SRCS:.rc=.h): $(WINERC)

dummy:

### Dependencies:
